#packages
library(sp)
library(raster)
library(maptools)
library(rasterVis)
library(rgdal)
library(dismo)
library(ape)
library(writexl)
library(sf)

#set the working directory
setwd("C:/Users/hp/Desktop/TESI/raster_layers")

#we recall all the variables
bat <- raster("C:/Users/hp/Desktop/BATRESOL.tif")
#The layer BAT was first resampled  to obtain all layers 
#with the same resolution using QGIS 3.16.14
temp <- raster("C:/Users/hp/Desktop/TESI/raster_layers/temperature.tif")
sal <- raster("C:/Users/hp/Desktop/TESI/raster_layers/salinity.tif")
cal <- raster("C:/Users/hp/Desktop/TESI/raster_layers/calcite.tif")
ox <- raster("C:/Users/hp/Desktop/TESI/raster_layers/oxygen.tif")
pH <- raster("C:/Users/hp/Desktop/TESI/raster_layers/pH.tif")

#we assign a projection to bat which is the batimetry
projection(bat) <- "+proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0"

#we can plot all our variables together to visualize them
par(mfrow=c(3,2))
plot(bat1,col=rev(topo.colors(50)),main="Bathymetry")
plot(temp,col=heat.colors(100),main="Mean temperature")
plot(ox,col=rainbow(100),main="Dissolved Oxygen")
plot(sal,col=rainbow(100),main="Salinity")
plot(cal,col=rainbow(100),main="Calcite")
plot(pH,col=rainbow(100),main="pH")


#to have all rasters with the same extent
#we can crop them using a shapefile of the area of interest
shape <- st_read("C:/Users/hp/Desktop/TESI/raster_layers/Mediterranean_basin.shp")
plot(shape)
crop_bat <- crop(bat, shape)
crop_temp <- crop(temp, shape)
crop_ox <- crop(ox, shape)
crop_cal <- crop(cal, shape)
crop_sal <- crop(sal, shape)
crop_pH <- crop(pH, shape)

#we can stack together all our raster files
stack_file <- stack(crop_bat, crop_temp, crop_ox, crop_cal, crop_sal, crop_pH)
Esummary(stack_file)
plot(stack_file)
#the stack_file needs to be saved
writeRaster(stack_file, filename = "stack_file.tif")
stack_file <- raster("C:/Users/hp/Desktop/TESI/raster_layers/stack_file.tif")
#Single grids from a grid stack can be selected using the $ selection: example
stack_file$bat


#the stack_file needs to be masked with the shape file
raster_mask <- mask(stack_file, shape)
plot(raster_mask)
#also the stack file needs to be saved
writeRaster(raster_mask, filename = names(raster_mask), bylayer=TRUE, format="GTiff")
